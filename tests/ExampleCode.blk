```plaintext
// ---------------------------------------Variable Creation
create X = "Y is equal to "

create Y = 10

create V = W    // "W is true"
```

```plaintext
// ---------------------------------------Console.log 
create ola = "2231231"

write (ola
 " friends"
)

```

```plaintext
// ---------------------------------------For loop
create Y = 5
stroke (create I = 0; I <= Y; I++)
{
    write (Y)
    yap (I)
}
```

```plaintext
// ---------------------------------------While Statement 

edge (Y < 20)
{
    yap ("Y is " Y)     // "Y is 10"
    bruh                // "Break"
}

```plaintext
// --------------------------------------Invertion 
create Y = W

Y = !Y

write ("The value of Y is " Y)

```

```plaintext
// ---------------------------------------Do While
create X = 3

slay
{
    yap (X)
    
    X++
} edge (X <= 5)

yap (X)

```

```plaintext
// -------------------------------------Switch Statement
create X = "Good"

chat (X) {
    if  "Good": 
        yap (X " Friends")
        bruh
    if  "Bad": 
        yap (X " Friends")
        bruh
}
```

```plaintext
// ----------------------------------Complex Switch Statement

create X = "bad"
create Y = 6

chat (X) {
    if "bad":
        yap("this is " X)
        bruh
if  ((Y <= 3 && Y != 7) || (Y == 6 && Y != 0)):
        yap (Y)
        bruh
}

```

```plaintext
// -----------------------------------If statement
create Y = "Rack"
bet (Y < 15)
{
    yap ("Y is indeed less then 15 ")
}
betagain(Y > 15)
{
    write ("Y is indeed more then 15 ")
}
badcall
{
    yap (Y)
}
```

```plaintext
// ----------------------------------Complex IF Statement

create X = L
create Y = 6
create Z = 0

bet ( Y != 7 && (L || W))
{
        yap(Y)

}betagain((Y == 6 && Y <= 3) && (Y <= 3 || W))
{
        yap(X)

}badcall{
        yap("GG")
}
```

```plaintext   
// ------------------------------------Functions 
cook Add (D,B)
{
  write (B)
  spit D 
}

create P = Add(0,10)

yap(P)
```